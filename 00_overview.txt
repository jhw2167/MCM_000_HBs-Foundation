Overview
---

Technologies:
Jetbrains Intelij 
Forge 1.20.1 Mod Development Kit

Mod Naming Convention:
MCM_00#_HBs-Ore-Clusters-and-Regen

Setup
---

1. Create a repo according to the mod naming convention above

2. Clone repo into local repository

3. Copy all files in the 00_Forge-1.20.1_TEMPLATE directory into your cloned empty directory

4. Bash into the directory, use ./gradlew to init the directory
	- run ./gradlew tasks to view list of all gradle tasks you can run
	- Call gradle on a particular subproject gradlew e.g. fabric:clean
	- Call a specific group task e.g. forge:build

5. To start Minecraft (by running a client or a Server) your options are:
	- fabric:runClient
 	- fabric:runServer

6. Fill out your mod's basic information in gradle.properties
	- Mod Name
	- Mod ID
	- Mod Version
	- Mod 

7. Add dependencies to your gradle
	- some fundamental dependencies are included within the build.gradle

8. Setup your java code
	- Determine you package names
	- Assign the correct mod_id to your ForgeMain method



Appendix
---


#7 Dependency help
---
- compileOnly "dependency"
	Purpose: The dependency is needed during compilation, but it is not included in 
			the runtime environment because it is provided, like by Minecraft or forge

- compileOnly fg.deobf("dependency")
	fg.deobf is a Forge specific plugin that deobfuscates a jar according to minecraft mappings

- runtimeOnly "dependency"
	- Your mod may have "soft dependencies" on another mod, using reflection for example
	- Good to clarify, not essential

- runtimeOnly fg.deobf("dependency")

